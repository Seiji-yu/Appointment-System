import {
  AxiomCLIError
} from "./chunk-NV3Y4T4G.js";

// src/config/index.ts
var DEFAULT_EVAL_INCLUDE = ["**/*.eval.{ts,js,mts,mjs,cts,cjs}"];
function defineConfig(config) {
  return config;
}
function createPartialDefaults() {
  return {
    eval: {
      url: process.env.AXIOM_URL || "https://api.axiom.co",
      token: process.env.AXIOM_TOKEN,
      dataset: process.env.AXIOM_DATASET,
      instrumentation: null,
      include: [...DEFAULT_EVAL_INCLUDE],
      exclude: [],
      timeoutMs: 6e4
    }
  };
}
function validateConfig(config) {
  const errors = [];
  if (!config.eval?.token) {
    errors.push(
      "eval.token is required (set in axiom.config.ts or AXIOM_TOKEN environment variable)"
    );
  }
  if (!config.eval?.dataset) {
    errors.push(
      "eval.dataset is required (set in axiom.config.ts or AXIOM_DATASET environment variable)"
    );
  }
  if (!config.eval?.url) {
    console.log(
      "eval.url was not specified. Defaulting to `https://api.axiom.co`. Please set it in axiom.config.ts or AXIOM_URL environment variable if you want to use a different endpoint."
    );
  }
  const instrumentation = config.eval?.instrumentation;
  if (instrumentation !== null && instrumentation !== void 0 && typeof instrumentation !== "function") {
    errors.push(
      "eval.instrumentation must be a function returning OTEL setup information or null."
    );
  }
  if (errors.length > 0) {
    throw new AxiomCLIError(`Invalid Axiom configuration:
  - ${errors.join("\n  - ")}`);
  }
  return config;
}

export {
  defineConfig,
  createPartialDefaults,
  validateConfig
};
//# sourceMappingURL=chunk-YPTTF7HZ.js.map